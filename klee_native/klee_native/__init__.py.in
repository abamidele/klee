# Copyright (c) 2019 Trail of Bits, Inc., all rights reserved.

from klee_native_api import *
from binaryninja import *

# Entity kinds.
ENTITY_UNKNOWN = 0
ENTITY_MACRO = 1
ENTITY_ENUM = 2
ENTITY_STRUCTURE = 3
ENTITY_CLASS = 4
ENTITY_PROTOCOL = 5
ENTITY_UNION = 6
ENTITY_TYPE_ALIAS = 7
ENTITY_FUNCTION = 8
ENTITY_VARIABLE = 9
ENTITY_FIELD = 10
ENTITY_ENUMERATOR = 11
ENTITY_METHOD = 12
ENTITY_PARAMETER = 13

# Bitmasks for `filter` kwarg of Workspace.search_entities().
FILTER_MACRO_ENTITIES = 1 << ENTITY_MACRO
FILTER_ENUM_ENTITIES = 1 << ENTITY_ENUM
FILTER_STRUCTURE_ENTITIES = 1 << ENTITY_STRUCTURE
FILTER_CLASS_ENTITIES = 1 << ENTITY_CLASS
FILTER_PROTOCOL_ENTITIES = 1 << ENTITY_PROTOCOL
FILTER_UNION_ENTITIES = 1 << ENTITY_UNION
FILTER_TYPE_ALIAS_ENTITIES = 1 << ENTITY_TYPE_ALIAS
FILTER_FUNCTION_ENTITIES = 1 << ENTITY_FUNCTION
FILTER_VARIABLE_ENTITIES = 1 << ENTITY_VARIABLE
FILTER_FIELD_ENTITIES = 1 << ENTITY_FIELD
FILTER_ENUMERATOR_ENTITIES = 1 << ENTITY_ENUMERATOR
FILTER_METHOD_ENTITIES = 1 << ENTITY_METHOD
FILTER_PARAMETER_ENTITIES = 1 << ENTITY_PARAMETER

# Derived search masks.
FILTER_CALLABLE_ENTITIES = FILTER_FUNCTION_ENTITIES | FILTER_METHOD_ENTITIES
FILTER_OBJECT_ENTITIES = FILTER_STRUCTURE_ENTITIES | FILTER_CLASS_ENTITIES | \
                         FILTER_UNION_ENTITIES

# Values for `pattern_kind` kwarg of Workspace.search_entities().
PATTERN_CASE_SENSITIVE = 0
PATTERN_CASE_INSENSITIVE = 1
PATTERN_REGULAR_EXPRESSION = 2

USE_DECLARATION = 0
USE_DEFINITION = 1
USE_REFERENCE = 2
USE_READ = 3
USE_WRITE = 4
USE_CALL = 5
USE_DYNAMIC = 6
USE_ADDRESS_OF = 7
USE_IMPLICIT = 8
USE_UNDEFINITION = 9
USE_CHILD_OF = 10
USE_BASE_OF = 11
USE_OVERRIDE_OF = 12
USE_RECEIVED_BY = 13
USE_CALLED_BY = 14
USE_EXTENDED_BY = 15
USE_ACCESSOR_OF = 16
USE_CONTAINED_BY = 17
USE_IB_TYPE_OF = 18
USE_SPECIALIZATION_OF = 19
USE_NAME_REFERENCE = 20

_USE_NAMES = tuple([
    "DECLARATION", "DEFINITION", "REFERENCE", "READ", "WRITE", "CALL",
    "DYNAMIC", "ADDRESS_OF", "IMPLICIT", "UNDEFINITION", "CHILD_OF",
    "BASE_OF", "OVERRIDE_OF", "RECEIVED_BY", "CALLED_BY", "EXTENDED_BY",
    "ACCESSOR_OF", "CONTAINED_BY", "IB_TYPE_OF", "SPECIALIZATION_OF",
    "NAME_REFERENCE"])

def use_kind_name(kind):
  return _USE_NAMES[kind]

# Bitmasks for `filter` kwarg of Entity.uses().
FILTER_DECLARATION_USES = 1 << USE_DECLARATION
FILTER_DEFINITION_USES = 1 << USE_DEFINITION
FILTER_REFERENCE_USES = 1 << USE_REFERENCE
FILTER_READ_USES = 1 << USE_READ
FILTER_WRITE_USES = 1 << USE_WRITE
FILTER_CALL_USES = 1 << USE_CALL
FILTER_DYNAMIC_USES = 1 << USE_DYNAMIC
FILTER_ADDRESS_OF_USES = 1 << USE_ADDRESS_OF
FILTER_IMPLICIT_USES = 1 << USE_IMPLICIT
FILTER_UNDEFINITION_USES = 1 << USE_UNDEFINITION
FILTER_CHILD_OF_USES = 1 << USE_CHILD_OF
FILTER_BASE_OF_USES = 1 << USE_BASE_OF
FILTER_OVERRIDE_OF_USES = 1 << USE_OVERRIDE_OF
FILTER_RECEIVED_BY_USES = 1 << USE_RECEIVED_BY
FILTER_CALLED_BY_USES = 1 << USE_CALLED_BY
FILTER_EXTENDED_BY_USES = 1 << USE_EXTENDED_BY
FILTER_ACCESSOR_OF_USES = 1 << USE_ACCESSOR_OF
FILTER_CONTAINED_BY_USES = 1 << USE_CONTAINED_BY
FILTER_IB_TYPE_OF_USES = 1 << USE_IB_TYPE_OF
FILTER_SPECIALIZATION_OF_USES = 1 << USE_SPECIALIZATION_OF
FILTER_NAME_REFERENCE_USES = 1 << USE_NAME_REFERENCE

